@model NosTRAILgic.Models.TrailMeetup

@{
    ViewBag.Title = "Details";
}

<table width="100%">
    <tr>
        <td width="10%"><img src="/Content/Upload/@Url.Content(Model.ImageLink)" width="100" height="100" /></td>

        <td width="40%">
            <h2>Trail Details - @Html.DisplayFor(model => model.Name)</h2>

            <br />

            <b>@Html.DisplayNameFor(model => model.CreatorID) : </b>
            @Html.DisplayFor(model => model.CreatorID)

            <br />

            <b>@Html.DisplayNameFor(model => model.Description) : </b>
            @Html.DisplayFor(model => model.Description)
        </td>

        <td width="50%">
            @{
                if (ViewBag.linqUserExistTest == "")
                {
                    @Html.ActionLink("Join Trail", "JoinTrail", new { id = Model.TrailMeetupID }, new { @class = "btn btn-default" })
                }
                else
                {
                    <button class="btn btn-default" type="button" disabled>Joined</button>
                }

            }
            <br />

            <b>@Html.DisplayNameFor(model => model.Date) : </b>
            @Html.DisplayFor(model => model.Date)

            <br />

            <b>Time : </b>
            @Html.DisplayFor(model => model.TimeFrom)
            <b> - </b>
            @Html.DisplayFor(model => model.TimeTo)

            <br />

            <b>@Html.DisplayNameFor(model => model.Limit)</b>
            @Html.DisplayFor(model => model.Limit)
        </td>
    </tr>

    <tr>
        <td colspan="3"><div id="map_canvas" style="width: 1000px; height: 300px;"></div></td>
    </tr>

    <tr>
        <td colspan="2">
            <b>Participants : </b>

            <br />

            <ul style="list-style-type : none">

                @{
                    string necro = ViewBag.participants;

                    string[] necroArray = necro.Split(',');

                    foreach (string z in necroArray)
                    {
                        if (z.EndsWith(","))
                        {
                            z.Substring(0, z.Length - 2);
                        }

                        @Html.Raw("<li>" + z + "</li>");
                    }
                }

            </ul>

        </td>

        <td>
            <b>Location Details : </b>
            <div id="locationDetails"></div>
        </td>
    </tr>
</table>

<p>
    @{
        if (User.Identity.Name == Model.CreatorID)
        {
            @Html.ActionLink("Edit", "Edit", new { id = Model.TrailMeetupID }, new { @class = "btn btn-default" })
        }
        if (User.IsInRole("Admin") || User.Identity.Name == Model.CreatorID)
        {
            @Html.ActionLink("Delete", "Delete", new { id = Model.TrailMeetupID }, new { @class = "btn btn-default" })
        }

    }

    <button class="btn btn-default" type="button" onclick="location.href='@Url.Action("Index", "TrailMeetup")'">Back to Trail Index</button>
</p>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript">
    window.onload = initialize;

    function initialize() {

        var mapOptions = {
            center: new google.maps.LatLng(1.4038, 103.7941),
            //    center: new google.maps.LatLng(1.3385674, 103.7059549),
            zoom: 11,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        //// create a marker
        //var latlng = new google.maps.LatLng(1.4038, 103.7941);
        //var marker = new google.maps.Marker({
        //    position: latlng,
        //    map: map,
        //    title: 'My Place'
        //});


        var locationName = '@ViewBag.linqLocationName';
        var LocationDesc = '@ViewBag.linqLocationDesc';
        var LocationHyperLink = '@ViewBag.linqLocationHyperLink';
        var LocationImageLink = '@ViewBag.linqLocationImageLink';
        var LocationPostalCode = '@ViewBag.linqLocationPostalCode';
        var Locationlat = '@ViewBag.linqLocationLat';
        var LocationLong = '@ViewBag.linqLocationLong';

        //console.log("Viewbag results for Location: ", trailInput);
        //console.log("Viewbag results for Lat: ", trailLatInput);
        //console.log("Viewbag results for Long: ", trailLongInput);

        // Split the Trail Input of Location based on COMMA into different location
        //var trailArray = trailInput.split(',');
        var LocationNameArray = locationName.split(',');
        var LocationDescArray = LocationDesc.split(',');
        var LocationHyperlinkArray = LocationHyperLink.split(',');
        var LocationImageLinkArray = LocationImageLink.split(',');
        var LocationPostalCodeArray = LocationPostalCode.split(',');
        var LocationLatArray = Locationlat.split(',');
        var LocationLongArray = LocationLong.split(',');

        var markers = [];
        var contents = [];
        var infowindows = [];

        for (i = 0; i < (LocationNameArray.length - 1) ; i++) {

            //console.log("lat long: ", LocationLatArray[i] + " , " + LocationLongArray[i]);

            markers[i] = new google.maps.Marker({
                position: new google.maps.LatLng(LocationLatArray[i], LocationLongArray[i]),
                map: map,
                title: LocationNameArray[i]
            });

            markers[i].index = i;
            contents[i] = '<div class="popup_container">' + LocationNameArray[i] + '</div>';

            infowindows[i] = new google.maps.InfoWindow({
                content: contents[i],
                maxWidth: 300
            });



            google.maps.event.addListener(markers[i], 'click', function () {
                var content =
                '<div>Name: </div>' +
                '<div>' + LocationNameArray[this.index] + '</div>' +
                '<div>Description:</div>' +
                '<div>' + LocationDescArray[this.index] + '</div>' +
                '<div>Link:</div>' +
                '<div><a href="' + LocationHyperlinkArray[this.index] + '">' + LocationHyperlinkArray[this.index] + '</a></div>' +
                '<div>Image: </div>' +
                '<div><img src="' + LocationImageLinkArray[this.index] + '"/></div>' +
                '<div>Postal Code: </div>' +
                '<div>' + LocationPostalCodeArray[this.index] + '</div>';

                document.getElementById("locationDetails").innerHTML = content;

                console.log(this.index); // this will give correct index
                console.log(i); //this will always give 10 for you
                infowindows[this.index].open(map, markers[this.index]);
                map.panto(markers[this.index].getposition());


                // pass back to controller to display location detail on views?

            });
        }

    }
</script>