@model IEnumerable<NosTRAILgic.Models.TrailMeetup_Details_ViewModel>

@{
    ViewBag.Title = "Details";
}

<table width="100%">
    <tr>
        @foreach (var item in Model)
        {
            <td width="10%">                                                                   
                <img src="/Content/Upload/@Url.Content(item.getTrailMeetup.ImageLink)" width="100" height="100" />
            </td>

            <td width="40%">
                <h2>Trail Details - @Html.DisplayFor(model => item.getTrailMeetup.Name)</h2>

                <br />

                <b>@Html.DisplayNameFor(model => model.getTrailMeetup.CreatorID) : </b>
                    @Html.DisplayFor(model => item.getTrailMeetup.CreatorID)

                <br />

                <b>@Html.DisplayNameFor(model => model.getTrailMeetup.Description) : </b>
                    @Html.DisplayFor(model => item.getTrailMeetup.Description)
            </td>

            <td width="50%">
                @{
                    if (ViewBag.linqUserExistTest == "" || ViewBag.linqUserExistTest == null)
                    {
                        if (ViewBag.TrailCount < item.getTrailMeetup.Limit)
                        {
                            @Html.ActionLink("Join Trail", "JoinTrail", new { id = item.getTrailMeetup.TrailMeetupID }, new { @class = "btn btn-default" })
                        }
                    }
                    else
                    {
                        <button class="btn btn-default" type="button" disabled>Joined</button>
                    }

                }
                
                <br />

                <b>@Html.DisplayNameFor(model => model.getTrailMeetup.Date) : </b>
                    @Html.DisplayFor(model => item.getTrailMeetup.Date)

                <br />

                <b>Time : </b> @Html.DisplayFor(model => item.getTrailMeetup.TimeFrom)
                <b> - </b> @Html.DisplayFor(model => item.getTrailMeetup.TimeTo)

                <br />

                <b>@Html.DisplayNameFor(model => model.getTrailMeetup.Limit) : </b>
                    @Html.DisplayFor(model => item.getTrailMeetup.Limit)
            </td>
        }
    </tr>

    <tr>
        <td colspan="3"><div id="map_canvas" style="width: 100%; height: 300px;"></div></td>
    </tr>

    <tr>
        <td colspan="2">
            <b>Participants : @ViewBag.TrailCount</b>

            <br />

            <ul>
                <!-----------------------------------------------------------------------------------
                - Description: For the displaying who are participants of Trails                    -
                -                                                                                   -
                - Developer: Yun Yong                                                               -
                -                                                                                   -
                - Date: 21/03/2016                                                                  -
                ------------------------------------------------------------------------------------->
                @{
                    foreach (var item in Model)
                    {
                        foreach (var trailParticipants in item.enumerableTrailParticipants)
                        {
                            <li>@trailParticipants</li>
                        }
                    }
                }
            </ul>

        </td>

        <td>
            <b>Location Details : </b>

            <div id="locationDetails"></div>         
        </td>
    </tr>
</table>

<p>
    <!-----------------------------------------------------------------------------------
    - Description: Logic for showing the Edit and Delete Trail Button to users          -
    -              Only the Trail Creator can edit the Trail information                -
    -              Only the Trail Creator and the Site Admin can delete Trail           -
    -                                                                                   -
    - Developer: Yun Yong                                                               -
    -                                                                                   -
    - Date: 21/03/2016                                                                  -
    ------------------------------------------------------------------------------------->
    @{
        foreach (var item in Model)
        {
            if (User.Identity.Name == item.getTrailMeetup.CreatorID)
            {
                @Html.ActionLink("Edit", "Edit", new { id = item.getTrailMeetup.TrailMeetupID }, new { @class = "btn btn-default" })
            }
            if (User.IsInRole("Admin") || User.Identity.Name == item.getTrailMeetup.CreatorID)
            {
                @Html.ActionLink("Delete", "Delete", new { id = item.getTrailMeetup.TrailMeetupID }, new { @class = "btn btn-default" })
            }
        }
    }

    <button class="btn btn-default" type="button" onclick="location.href='@Url.Action("Index", "TrailMeetup")'">Back to Trail Index</button>
</p>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript">
    window.onload = initialize;

    function initialize() {

        var mapOptions = {
            center: new google.maps.LatLng(1.4038, 103.7941),
            //    center: new google.maps.LatLng(1.3385674, 103.7059549),
            zoom: 11,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        var markers = [];
        var contents = [];
        var infowindows = [];

        /************************************************************************************
         * Description: This function handles the rendering of the markers to Google        *
         *              map based on the enumerableAllLocationFromTrail object              *
         *                                                                                  *
         * Developer: Yun Yong                                                              *
         *                                                                                  *
         * Date: 21/03/2016                                                                 *
         ************************************************************************************/
        @{
            foreach (var item in Model)
            {
                int counter = 0;
                foreach (var location in item.enumerableAllLocationFromTrail)
                {
                    <text>
                        markers[@counter] = new google.maps.Marker({
                            position: new google.maps.LatLng(@location.Latitude, @location.Longitude),
                            map: map,
                            title: 'Some Marker Title'
                        });

                        markers[@counter].index = @counter;
                        contents[@counter] = '<div class="popup_container">' + "@location.Name" + '</div>';

                        infowindows[@counter] = new google.maps.InfoWindow({
                                content: contents[@counter] ,
                            maxWidth: 300
                        });

                        google.maps.event.addListener(markers[@counter], 'click', function () {
                            var content =
                            '<div>Name: @location.Name</div>' +
                            '<div>Description: @location.Description</div>' +
                            '<div>Link: <a href="' + '@location.HyperLink' + '">' + '@location.HyperLink' + '</a></div>' +
                            '<div>Image: <img src="' + '@location.ImageLink' + '"/></div>' +
                            '<div>Postal Code: @location.PostalCode</div>' ;

                            //Remove empty image
                            var str = content;
                            var res = str.split("<div>");
                            if(!res[4].includes("jpg"))
                            {
                                delete res[4];
                                content = res.join("<div>")
                            }
                            
                            //Remove for empty link
                            var content = content.replace('<div>Link: <a href="&lt;Null&gt;">&lt;Null&gt;</a></div>',"")
                            
                            document.getElementById("locationDetails").innerHTML = content;

                            infowindows[this.index].open(map, markers[this.index]);
                            map.panTo(markers[this.index].getPosition());
                        });
                    </text>

                    counter++;
                }

            }
        }
    }
</script>
